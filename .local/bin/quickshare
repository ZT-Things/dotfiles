#!/usr/bin/python3
import http.server
import socketserver
import socket
import sys
import os
import argparse
from pyngrok import ngrok

def main():
    parser = argparse.ArgumentParser(description="Quickly share a file or folder over HTTP with optional ngrok")
    parser.add_argument("path", help="Path to file or folder to share")
    parser.add_argument("-p", "--port", type=int, default=8000, help="Port to serve on (default: 8000)")
    parser.add_argument("--ngrok", action="store_true", help="Expose server via ngrok")
    args = parser.parse_args()

    share_path = os.path.abspath(args.path)
    if not os.path.exists(share_path):
        print("‚ùå Error: Path does not exist.")
        sys.exit(1)

    is_file = os.path.isfile(share_path)

    if is_file:
        shared_dir = os.path.dirname(share_path)
        shared_name = os.path.basename(share_path)
        os.chdir(shared_dir)

        class SingleFileHandler(http.server.SimpleHTTPRequestHandler):
            def list_directory(self, path):
                return self.send_head()
            def do_GET(self):
                if self.path.strip("/") != shared_name:
                    self.send_error(403, "Forbidden")
                    return
                return super().do_GET()

        handler = SingleFileHandler
    else:
        os.chdir(share_path)
        handler = http.server.SimpleHTTPRequestHandler

    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        ip = s.getsockname()[0]
        s.close()
    except Exception:
        ip = "localhost"

    class ReusableTCPServer(socketserver.TCPServer):
        allow_reuse_address = True

    with ReusableTCPServer(("0.0.0.0", args.port), handler) as httpd:
        print(f"‚úÖ Serving '{args.path}' at: http://{ip}:{args.port}/")
        if is_file:
            print(f"üìÑ Direct link: http://{ip}:{args.port}/{shared_name}")

        if args.ngrok:
            print("üåê Starting ngrok tunnel...")
            public_url = ngrok.connect(args.port)
            url = public_url.public_url
            # If single file, append the filename
            if is_file:
                url = f"{url}/{shared_name}"
            print(f"üîó Public URL: {url}")

            os.system(f'qr {url}')
            print(f"\nüì± Scan this QR code with your phone: {url}\n")

        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\n‚ùå Server stopped by user.")

if __name__ == "__main__":
    main()
